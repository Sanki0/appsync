AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'pruebas-sanki0

  '
Resources:
  AppSyncServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - appsync.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: AllowAccessForAppsyncResolvers
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:DeleteItem
            - dynamodb:UpdateItem
            - dynamodb:Query
            - dynamodb:Scan
            Resource:
            - Fn::GetAtt:
              - DB
              - Arn
            - Fn::Sub:
              - ${Table}/index/*
              - Table:
                  Fn::GetAtt:
                  - DB
                  - Arn
          - Effect: Allow
            Action:
            - lambda:invokeFunction
            Resource:
            - Fn::GetAtt:
              - GetStudentFunction
              - Arn
  AppSyncApi:
    DependsOn: AppSyncServiceRole
    Type: AWS::AppSync::GraphQLApi
    Description: The GraphQL API for the single table App
    Properties:
      Name: AppSyncTestAPI
      AuthenticationType: API_KEY
  AppSyncApiKey:
    Type: AWS::AppSync::ApiKey
    Properties:
      ApiId:
        Fn::GetAtt:
        - AppSyncApi
        - ApiId
  AppSyncSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - AppSyncApi
        - ApiId
      DefinitionS3Location: ../../schema.graphql
  AppSyncTableDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Name: SingleTableStudents
      ApiId:
        Fn::GetAtt:
        - AppSyncApi
        - ApiId
      Description: The Single Table AppSync Data Source
      Type: AMAZON_DYNAMODB
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      DynamoDBConfig:
        TableName:
          Ref: DB
        AwsRegion:
          Fn::Sub: ${AWS::Region}
  GetStudentDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
        - AppSyncApi
        - ApiId
      Name: GetStudentDataSource
      Type: AWS_LAMBDA
      ServiceRoleArn:
        Fn::GetAtt:
        - AppSyncServiceRole
        - Arn
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
          - GetStudentFunction
          - Arn
  createStudentResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: AppSyncSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - AppSyncApi
        - ApiId
      TypeName: Mutation
      FieldName: createStudent
      DataSourceName:
        Fn::GetAtt:
        - AppSyncTableDataSource
        - Name
      RequestMappingTemplate: "{\n  \"version\": \"2017-02-28\",\n  \"operation\"\
        : \"PutItem\",\n  \"key\": {\n        \"id\" : $util.dynamodb.toDynamoDBJson(\"\
        STUDENT\"),\n        \"sort\": $util.dynamodb.toDynamoDBJson($context.arguments.input.dni)\n\
        \  },\n  \"attributeValues\" : {\n    \"dni\" : $util.dynamodb.toDynamoDBJson($context.arguments.input.dni),\n\
        \    \"name\" : $util.dynamodb.toDynamoDBJson($context.arguments.input.name),\n\
        \    \"address\" : $util.dynamodb.toDynamoDBJson($context.arguments.input.address)\n\
        \  }\n}\n"
      ResponseMappingTemplate: "{\n    \"name\": $util.toJson($ctx.result['name']),\n\
        \    \"dni\": $util.toJson($ctx.result['dni']),\n    \"address\": $util.toJson($ctx.result['address'])\n\
        }\n"
  GetStudentResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: AppSyncSchema
    Properties:
      ApiId:
        Fn::GetAtt:
        - AppSyncApi
        - ApiId
      TypeName: Query
      FieldName: getStudent
      DataSourceName:
        Fn::GetAtt:
        - AppSyncTableDataSource
        - Name
      RequestMappingTemplate: "{\n  \"version\": \"2017-02-28\",\n  \"operation\"\
        : \"GetItem\",\n  \"key\": {\n    \"id\": $util.dynamodb.toDynamoDBJson(\"\
        STUDENT\"),\n    \"sort\": $util.dynamodb.toDynamoDBJson($context.arguments.dni)\n\
        \  }\n}\n"
      ResponseMappingTemplate: "{\n    \"name\": $util.toJson($ctx.result['name']),\n\
        \    \"dni\": $util.toJson($ctx.result['dni']),\n    \"address\": $util.toJson($ctx.result['address'])\n\
        }\n"
  DB:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Student
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      - AttributeName: sort
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      - AttributeName: sort
        KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
  GetStudentFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handler
      Runtime: go1.x
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DB
      Environment:
        Variables:
          GREETINGS_TABLE:
            Ref: DB
      CodeUri: GetStudentFunction
    Metadata:
      SamResourceId: GetStudentFunction
Outputs:
  APIKey:
    Description: API Key
    Value:
      Fn::GetAtt:
      - AppSyncApiKey
      - ApiKey
  GraphQLApiEndpoint:
    Description: The URL to the GraphQL Endpoint
    Value:
      Fn::GetAtt:
      - AppSyncApi
      - GraphQLUrl
  GraphQLApiId:
    Description: The API ID of the GraphQL API
    Value:
      Fn::GetAtt:
      - AppSyncApi
      - ApiId
